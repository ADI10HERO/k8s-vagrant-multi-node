Vagrant.configure('2') do |config|
    config.vm.box = $box_image
    config.vm.box_check_update = true

    config.vm.provider 'virtualbox' do |l|
        l.cpus = NODE_CPUS
        l.memory = NODE_MEMORY_SIZE_GB * 1024
    end

    config.vm.define "node#{NODE}" do |subconfig|
        subconfig.vm.hostname = "node#{NODE}"
        subconfig.vm.network :private_network, ip: NODE_IP
        subconfig.vm.provider :virtualbox do |vb|
            vb.customize ['modifyvm', :id, '--uartmode1', 'disconnected']
            # Network configuration
            vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
            # Storage configuration
            if $storagecontrollerneedstobecreated
                if File.exist?(".vagrant/#{BOX_OS}-node#{NODE}-disk-1.vdi")
                    vb.customize ['storagectl', :id, '--name', $storagecontroller, '--remove']
                end
                vb.customize ['storagectl', :id, '--name', $storagecontroller, '--add', 'sata']
            end
            (1..DISK_COUNT.to_i).each do |diskI|
                diskID = (diskI - 1) + $diskIModifier
                unless File.exist?(".vagrant/#{BOX_OS}-node#{NODE}-disk-#{diskID}.vdi")
                    vb.customize ['createhd', '--filename', ".vagrant/#{BOX_OS}-node#{NODE}-disk-#{diskID}.vdi", '--variant', 'Standard', '--size', DISK_SIZE_GB * 1024]
                end
                vb.customize ['storageattach', :id, '--storagectl', $storagecontroller, '--port', diskID, '--device', 0, '--type', 'hdd', '--medium', ".vagrant/#{BOX_OS}-node#{NODE}-disk-#{diskID}.vdi"]
            end
        end
        subconfig.vm.synced_folder "data/#{BOX_OS}-node#{NODE}/", '/data', type: 'rsync',
            create: true, owner: 'root', group: 'root',
            rsync__args: ["--rsync-path='sudo rsync'", '--archive', '--delete', '-z']
        # Provision
        subconfig.vm.provision :shell, inline: $prepareScript
        subconfig.vm.provision :shell, inline: $baseInstallScript
        subconfig.vm.provision :shell, inline: $kubeMinionScript
    end
end
